#!/usr/bin/env node
/**
 * Build Environment Configuration Script
 * Creates the environment configuration file for SpotifAI - StreamSmart
 */

const fs = require('fs');
const path = require('path');

console.log('üîß Creating environment configuration...');

// Get the Gemini API key from environment variables
const geminiApiKey = process.env.GEMINI_API_KEY || '';

if (!geminiApiKey) {
    console.warn('‚ö†Ô∏è  WARNING: GEMINI_API_KEY environment variable not found');
    console.warn('    AI features may not work without a valid API key');
}

// Create the environment configuration
const envConfig = `// Environment Configuration for SpotifAI - StreamSmart
// This file is automatically generated during the build process

console.log('üöÄ SpotifAI - StreamSmart: Environment configuration loaded');

window.ENV = {
    GEMINI_API_KEY: '${geminiApiKey}'
};

// For debugging (remove in production)
console.log('Environment configured with API key:', window.ENV.GEMINI_API_KEY ? '‚úÖ Present' : '‚ùå Missing');
`;

// Ensure the directory exists
const envDir = path.join(__dirname, 'src', 'scripts');
if (!fs.existsSync(envDir)) {
    fs.mkdirSync(envDir, { recursive: true });
}

// Write the environment file
const envPath = path.join(envDir, 'env.js');
fs.writeFileSync(envPath, envConfig);

console.log(`‚úÖ Environment configuration created at: ${envPath}`);
console.log(`üîë API key configured: ${geminiApiKey ? '‚úÖ Yes' : '‚ùå No'}`);